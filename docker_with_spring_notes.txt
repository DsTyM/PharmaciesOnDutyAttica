1) At first we need to have mysql_client installed on the host machine.
	On Ubuntu we can install it with this command:
	sudo apt install mysql-client
2) Then we run this command:
	docker container run --name mysql-for-pharmacies -e MYSQL_ROOT_PASSWORD=password -e MYSQL_DATABASE=pharmacies -e MYSQL_USER=developer -e MYSQL_PASSWORD=developer -d mysql:8.0.18
3) Then we run this command:
	docker inspect mysql-for-pharmacies

	to find the: IPAddress witch we will use later.
	Let's say that the IPAddress is: 172.17.0.2
4) We import from the .sql file to the database pharmacies with this command:
	mysql -udeveloper -pdeveloper -h 172.17.0.2 -P 3306 pharmacies < "path/database.sql"
5) We make sure that the database has been imported correctly:
	mysql -udeveloper -pdeveloper -h 172.17.0.2 -P 3306
	use pharmacies;
	show tables;

	then we make sure that the tables have been imported.
6) We open the spring boot project with IntelliJ, then we open the maven file named: pom.xml
	and we change this:
	<build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
        </plugins>
    </build>

	with this:
	<build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <configuration>
                    <finalName>pharmacies-on-duty-attica</finalName>
                </configuration>
            </plugin>
        </plugins>
    </build>

	we just added these lines:
	<configuration>
            <finalName>pharmacies-on-duty-attica</finalName>
        </configuration>

	Then on pom.xml file:
	Right Click -> Maven -> Reimport
7) Then we open the Maven field on the right side of the IDE, we expand: pharmacies-on-duty-attica -> Lifecycle
	we select: Clean and Install
	and we click: Run Maven Build
	the result will be on: target/pharmacies-on-duty-attica.jar
8) On IntelliJ and we create a file named: Dockerfile
	and we write in the file these commands:
	FROM openjdk:13.0.1
	ADD target/pharmacies-on-duty-attica.jar pharmacies-on-duty-attica.jar
	EXPOSE 8086
	ENTRYPOINT ["java", "-jar", "pharmacies-on-duty-attica.jar"]
	
	pharmacies-on-duty-attica is the name we given on: finalName on pom.xml file.
9) Then we run this command to create our app container:
	docker container run -p 8086:8080 --name pharmacies-on-duty-attica --link mysql-for-pharmacies:mysql -d pharmacies-on-duty-attica
10) Then we access our app on the URL: http://localhost:8086

